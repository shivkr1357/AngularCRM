import { Injectable } from '@angular/core';
import { Lead } from '../interfaces/lead.interface';

@Injectable({
  providedIn: 'root',
})
export class LeadService {
  private leads: Lead[] = [
    {
      id: 1,
      name: 'John Smith',
      email: 'john@example.com',
      phone: '+1 234-567-8900',
      status: 'New',
      company: 'Tech Solutions Inc',
      source: 'Website',
      value: '$10,000',
      probability: 30,
      notes: 'Interested in enterprise solution',
    },
    {
      id: 2,
      name: 'Sarah Johnson',
      email: 'sarah@example.com',
      phone: '+1 345-678-9012',
      status: 'Contacted',
      company: 'Global Industries',
      source: 'Referral',
      value: '$15,000',
      probability: 60,
      notes: 'Follow up scheduled for next week',
    },
    {
      id: 3,
      name: 'Mike Brown',
      email: 'mike@example.com',
      phone: '+1 456-789-0123',
      status: 'Qualified',
      company: 'Acme Corp',
      source: 'Trade Show',
      value: '$20,000',
      probability: 80,
      notes: 'Ready for proposal',
    },
    {
      id: 4,
      name: 'Emily Davis',
      email: 'emily.davis@example.com',
      phone: '+1 567-890-1234',
      status: 'New',
      company: 'Bright Future LLC',
      source: 'LinkedIn',
      value: '$8,000',
      probability: 25,
      notes: 'Requested product demo',
    },
    {
      id: 5,
      name: 'David Wilson',
      email: 'david.wilson@example.com',
      phone: '+1 678-901-2345',
      status: 'Contacted',
      company: 'NextGen Tech',
      source: 'Cold Call',
      value: '$12,500',
      probability: 50,
      notes: 'Interested in annual subscription',
    },
    {
      id: 6,
      name: 'Olivia Martinez',
      email: 'olivia.martinez@example.com',
      phone: '+1 789-012-3456',
      status: 'Qualified',
      company: 'Green Energy Co',
      source: 'Website',
      value: '$18,000',
      probability: 70,
      notes: 'Needs approval from finance',
    },
    {
      id: 7,
      name: 'James Lee',
      email: 'james.lee@example.com',
      phone: '+1 890-123-4567',
      status: 'Proposal Sent',
      company: 'Urban Solutions',
      source: 'Referral',
      value: '$22,000',
      probability: 85,
      notes: 'Proposal under review',
    },
    {
      id: 8,
      name: 'Sophia Turner',
      email: 'sophia.turner@example.com',
      phone: '+1 901-234-5678',
      status: 'Negotiation',
      company: 'Market Leaders',
      source: 'Trade Show',
      value: '$30,000',
      probability: 90,
      notes: 'Negotiating contract terms',
    },
    {
      id: 9,
      name: 'Benjamin Clark',
      email: 'benjamin.clark@example.com',
      phone: '+1 123-456-7891',
      status: 'Won',
      company: 'Prime Ventures',
      source: 'LinkedIn',
      value: '$25,000',
      probability: 100,
      notes: 'Deal closed successfully',
    },
    {
      id: 10,
      name: 'Ava Lewis',
      email: 'ava.lewis@example.com',
      phone: '+1 234-567-8910',
      status: 'Lost',
      company: 'InnovateX',
      source: 'Website',
      value: '$14,000',
      probability: 0,
      notes: 'Chose competitor',
    },
    {
      id: 11,
      name: 'William Walker',
      email: 'william.walker@example.com',
      phone: '+1 345-678-9101',
      status: 'New',
      company: 'Tech Innovators',
      source: 'Cold Call',
      value: '$9,500',
      probability: 20,
      notes: 'Requested more information',
    },
    {
      id: 12,
      name: 'Mia Hall',
      email: 'mia.hall@example.com',
      phone: '+1 456-789-1012',
      status: 'Contacted',
      company: 'Blue Ocean Ltd',
      source: 'Referral',
      value: '$11,000',
      probability: 40,
      notes: 'Follow-up call scheduled',
    },
    {
      id: 13,
      name: 'Alexander Young',
      email: 'alexander.young@example.com',
      phone: '+1 567-891-0123',
      status: 'Qualified',
      company: 'Future Tech',
      source: 'Trade Show',
      value: '$16,000',
      probability: 65,
      notes: 'Interested in custom solution',
    },
  ];

  constructor() { }

  getLeadById(id: number): Lead | undefined {
    return this.leads.find((lead) => lead.id === id);
  }

  getAllLeads(): Lead[] {
    return this.leads;
  }
}
